{"version":3,"sources":["types/types.js","actions/ui.js","actions/auth.js","spotify/Credentials.js","components/auth/LoginScreen.js","routes/AuthRouter.js","helpers/loadArtists.js","helpers/searchArtists.js","selectors/getArtistById.js","actions/artists.js","components/spotify/Artists/ArtistCard.js","components/spotify/Artists/ArtistList.js","components/spotify/Artists/ArtistsScreen.js","components/spotify/Artists/ArtistInfo/TopCart.js","components/spotify/Artists/ArtistInfo/AlbumCart.js","components/spotify/Artists/ArtistInfo/RelatedPhoto.js","components/spotify/ArtistScreen.js","helpers/loadReleases.js","helpers/loadReleasesNext.js","actions/releases.js","components/spotify/Releases/ReleasesCard.js","components/spotify/Releases/ReleasesList.js","components/spotify/Releases/ReleasesScreen.js","helpers/loadSongs.js","helpers/searchSongs.js","actions/songs.js","components/spotify/Songs/SongsCard.js","components/spotify/Songs/SongsList.js","components/spotify/Songs/SongsScreen.js","styles/images/Spotify.png","components/ui/Navbar.js","hooks/useForm.js","routes/DashboardRoutes.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","reducers/artistsReducer.js","reducers/releasesReducer.js","reducers/songsReducer.js","reducers/spotifyReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","SpotifyApp.js","index.js"],"names":["types","startLoading","type","finishLoading","startSpotifyLogin","spotify","ClientId","ClientSecret","dispatch","axios","headers","btoa","data","method","then","tokenResponse","console","log","access_token","localStorage","setItem","loginSpotify","window","location","href","catch","err","Swal","fire","message","token","payload","startLogout","a","removeItem","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","className","onClick","disabled","AuthRouter","exact","path","component","to","loadArtists","artists","artistas","forEach","artist","push","idArtist","id","name","imgArtist","images","url","hrefArtist","followers","total","searchArtists","search","items","popularity","getArtistById","artistId","relatedOptions","relateds","albumsOptions","albums","idAlbum","release_date","topTracksOptions","tracks","trackss","idTrack","album","duration_ms","startLoadingArtists","activeArtists","setArtists","startSearchArtist","screen","title","setActiveArtist","activeArtist","setRelatedArtists","relatedArtists","setAlbums","setTracks","ArtistCard","style","border","alt","cursor","backgroundImage","backgroundColor","color","ArtistList","map","ArtistsScreen","auth","useEffect","TopCart","position","useState","duration","setDuration","time","totalSeconds","Math","floor","totalMinutes","totalDuration","toString","slice","join","parseInt","charAt","getDuration","AlbumCart","props","thumb","year","RelatedPhoto","ArtistScreen","useParams","startActiveArtist","startRelatedArtists","startAlbumsArtist","topTracks","startTopTracks","offset","setOffset","offsetList","related","track","index","loadReleases","next","previous","releases","snapHijo","imgAlbum","hrefAlbum","nameArtist","loadReleasesNext","api","setReleases","ReleasesCard","hrefArtis","src","padding","ReleasesList","release","ReleasesScreen","startLoadingReleases","textAlign","background","startPreviousPage","fontSize","startNextPage","loadSongs","categories","category","idCategory","icon","icons","hrefCategory","searchSongs","songs","song","idSong","preview","preview_url","startLoadingSongs","setSongs","startSearchSong","activeSongs","alert","startScreen","getState","SongsCard","SongsList","SongsScreen","Navbar","history","useHistory","useLocation","queryString","parse","q","q2","initialState","values","setValues","target","value","useForm","searchArtist","searchSong","formValues","handleInputChange","handleSearchArtist","e","preventDefault","replace","trim","length","handleSearchSong","logo","onSubmit","placeholder","autoComplete","onChange","width","DashboardRoutes","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","getItem","initState","active","msgError","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","uid","displayName","store","createStore","applyMiddleware","thunk","SpotifyApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7846c23b.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    spotifyToken: '[Spotify] get Token Spotify',\r\n\r\n    releasesLoad: '[releases] Load Releases',\r\n    releasesScreenActive: '[releases] Screen Active',\r\n    \r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    songsStartScreen: '[Songs] Start Screen',\r\n    songsScreenActive: '[Songs] Set active screen', //envio al store la pantalla activa y url\r\n    songsLoad: '[Songs] Load Songs', \r\n\r\n    ArtistsStartScreen: '[Artists] Start Screen',\r\n    ArtistsScreenActive: '[Artists] Set active screen', //envio al store la pantalla activa y url\r\n    ArtistsLoad: '[Artists] Load Artists', \r\n\r\n    activeArtist: '[Artists] artist Active',\r\n    relatedArtists: '[Artists] related Artists',\r\n    albums: '[Artists] albums Artist',\r\n    topTracks: '[Artists] topTracks Artist',\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { Credentials } from '../spotify/Credentials';\r\n\r\n\r\nexport const startSpotifyLogin = () => {\r\n    const spotify = Credentials();\r\n\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        axios('https://accounts.spotify.com/api/token', {\r\n        headers: {\r\n            'Content-Type' : 'application/x-www-form-urlencoded',\r\n            'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \r\n        },\r\n        data: 'grant_type=client_credentials',\r\n        method: 'POST'\r\n\r\n        })\r\n        .then( tokenResponse => {\r\n            //setToken(tokenResponse.data.access_token);\r\n            console.log( tokenResponse.data.access_token );\r\n            dispatch( finishLoading() );\r\n            localStorage.setItem('token', tokenResponse.data.access_token );\r\n            dispatch(loginSpotify( tokenResponse.data.access_token ) );\r\n            console.log('SE HACE EL DISPATCH AL REDUCERRRRR');\r\n            \r\n            window.location.href = '/';\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n            dispatch( finishLoading() );\r\n            Swal.fire( 'Error', err.message, 'error' );\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const loginSpotify = ( token ) => ({\r\n    type: types.spotifyToken,\r\n    payload: {\r\n        token\r\n    }\r\n});\r\n\r\n//En caso de necesitarse LOGIN Y LOGOUT.\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid, \r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        localStorage.removeItem('token');\r\n        dispatch( logout() );\r\n        window.location.href = '/';\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","const Credentials = () => {\r\n\r\n    return {\r\n        ClientId: '0b35903736d84a5687d6cfe8c67e1731',\r\n        ClientSecret: '703730b065a94408b457a37811a0a4ad',\r\n    }\r\n}\r\n\r\nexport { Credentials };","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSpotifyLogin } from '../../actions/auth';\r\n        \r\n\r\n///////////////////////////LOGIN SCREEN////////////////////////////////\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n    //const {token} = useSelector(state => state.auth)\r\n\r\n    ///////SPOTIFY\r\n\r\n    const handleSpotifyLogin = () => {\r\n        console.log('CLICK SPOTIFY! ');\r\n\r\n        dispatch( startSpotifyLogin() );\r\n          \r\n    }\r\n  \r\n\r\n    return (\r\n            <>\r\n                <center><h4 className=\"mb-3\" >Ingresar</h4></center>\r\n                {\r\n                    ( loading ) && \r\n                    <div className=\"alert alert-info\">Loading...</div>\r\n                }\r\n                    <center>\r\n                    <div className=\"container\">\r\n                        <button\r\n                            onClick = { handleSpotifyLogin }\r\n                            className=\"btn btn-success\"\r\n                            disabled = { loading }\r\n                        >\r\n                            Login Spotify\r\n                        </button>\r\n                    </div>\r\n                    </center>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nexport const loadArtists = async ( token ) => {\r\n    \r\n    \r\n\r\n    const {data} = await axios('https://api.spotify.com/v1/artists?ids=2lLqHBjAnD1QyH24pOPoH6,3P6ePaE5unCm7vjccfcBAe,6R21HSNyo7HVac8pyqY3T2,2fVW2ix4ANKiofDZIsy1XR,0oSGxfWSnnOXhD2fKuz2Gy,3dBVyJ7JuOMt4GE9607Qin,14vNE9iqS5eGAL6OogiN8g,7jEEE187pVG6InOxn03oA5,68QvqbdqwqqjW39YpUJHdG,22nh3odnqoCNzVGwEzXILk,5CPsScBTPYY11Lv4Eb7k4t,4SqTiwOEdYrNayaGMkc7ia', {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTÁ ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n\r\n    //console.log(data);\r\n\r\n    const {artists} = data;\r\n    //console.log(artists);\r\n    \r\n    const artistas = [];\r\n    \r\n\r\n    artists.forEach( artist => {\r\n\r\n        artistas.push({\r\n            \r\n            idArtist: artist.id,\r\n            name: artist.name,\r\n            imgArtist: artist.images[2]?.url,\r\n            hrefArtist: artist.href,\r\n            followers: artist.followers.total\r\n\r\n        })\r\n\r\n    });\r\n\r\n    //console.log(artistas);\r\n    return artistas;\r\n}","import axios from 'axios';\r\n\r\n\r\nexport const searchArtists = async ( token, search ) => {\r\n    \r\n    \r\n\r\n    const {data} = await axios(`https://api.spotify.com/v1/search?q=${search}&type=artist&limit=6&offset=5`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTA ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n\r\n    //console.log(data);\r\n\r\n\r\n     \r\n    const {items} = data.artists;\r\n    //console.log(items);\r\n    \r\n    \r\n    const artistas = [];\r\n    \r\n\r\n    items.forEach( artist => {\r\n\r\n        artistas.push({\r\n            \r\n            idArtist: artist.id,\r\n            name: artist.name,\r\n            imgArtist: artist.images[2]?.url,\r\n            hrefArtist: artist.href,\r\n            followers: artist.followers.total,\r\n            popularity: artist.popularity,\r\n\r\n        })\r\n\r\n    });\r\n\r\n    //console.log(artistas);\r\n    return artistas;\r\n}","import axios from 'axios';\r\n\r\n\r\nexport const getArtistById = async ( artistId, token ) => {\r\n    \r\n    const {data} = await axios(`https://api.spotify.com/v1/artists/${ artistId}`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })\r\n\r\n        //console.log(data);\r\n        const artist = [];\r\n        \r\n        artist.push({\r\n                    \r\n                    idArtist: data.id,\r\n                    name: data.name,\r\n                    imgArtist: data.images,\r\n                    hrefArtist: data.href,\r\n                    followers: data.followers.total,\r\n                    popularity: data.popularity,\r\n                    type: data.type\r\n\r\n        })\r\n    \r\n    //console.log(artist);\r\n    \r\n    return artist;\r\n\r\n}\r\n\r\n\r\nexport const relatedOptions = async ( artistId, token ) => {\r\n    \r\n    const {data} = await axios(`https://api.spotify.com/v1/artists/${ artistId}/related-artists`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })\r\n\r\n        const {artists} = data;\r\n\r\n        const relateds = [];\r\n        \r\n        artists.forEach( data => {\r\n            relateds.push({\r\n                    \r\n                idArtist: data.id,\r\n                name: data.name,\r\n                imgArtist: data.images,\r\n                hrefArtist: data.href,\r\n                followers: data.followers.total,\r\n                popularity: data.popularity,\r\n                type: data.type\r\n            })\r\n\r\n        })\r\n\r\n        \r\n    //console.log(':::RELATED OPTIONS:::');\r\n    //console.log(artists);\r\n    return relateds\r\n}\r\n\r\nexport const albumsOptions = async ( artistId, token ) => {\r\n    \r\n    const {data} = await axios(`https://api.spotify.com/v1/artists/${ artistId}/albums?limit=6&offset=6`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })\r\n\r\n        const {items} = data;\r\n        const albums = [];\r\n        \r\n        items.forEach( data => {\r\n\r\n            albums.push({\r\n                        \r\n                idAlbum: data.id,\r\n                name: data.name,\r\n                release_date: data.release_date,\r\n                images: data.images,\r\n    \r\n            })\r\n        })\r\n\r\n\r\n    //console.log('::ALBUMS OPTIONS:::');\r\n    //console.log(albums);\r\n    \r\n    return albums;\r\n\r\n}\r\n\r\nexport const topTracksOptions = async ( artistId, token ) => {\r\n    \r\n    const {data} = await axios(`https://api.spotify.com/v1/artists/${ artistId}/top-tracks?market=CO`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })\r\n\r\n        const { tracks } = data;\r\n        //console.log(data);\r\n        const trackss = [];\r\n        \r\n        tracks.forEach( data => {\r\n\r\n            trackss.push({\r\n                        \r\n                idTrack: data.id,\r\n                name: data.name,\r\n                album: data.album.name,\r\n                duration_ms: data.duration_ms,\r\n                images: data.album.images,\r\n    \r\n            })\r\n        })\r\n\r\n    //console.log(':::DATA TOP TRACKS OPTIONS');\r\n    //console.log(trackss);\r\n    \r\n    return trackss;\r\n\r\n}","\r\nimport { loadArtists } from \"../helpers/loadArtists\";\r\nimport { searchArtists } from \"../helpers/searchArtists\";\r\nimport { albumsOptions, getArtistById, relatedOptions, topTracksOptions } from \"../selectors/getArtistById\";\r\nimport { types } from \"../types/types\";\r\nimport { startLogout } from \"./auth\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\n\r\nexport const startLoadingArtists = ( token ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        try {\r\n            dispatch( activeArtists('artists', 'Artists') );\r\n            const artists = await loadArtists( token );\r\n            //console.log( artists );\r\n            dispatch( setArtists( artists ));\r\n            dispatch( activeArtists('artists', 'Artists') );\r\n            //console.log(artists);\r\n            dispatch( finishLoading() );\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport const startSearchArtist = ( token, search ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            dispatch( startLoading() );\r\n            \r\n            const artists = await searchArtists( token, search );\r\n            //console.log('RESULTADO DE LA BUSQUEDA:' , artists);\r\n            dispatch( setArtists( artists ));\r\n            dispatch( finishLoading() );\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n    }\r\n}\r\n\r\nexport const setArtists = ( artists ) => ({\r\n    type: types.ArtistsLoad,\r\n    payload: artists,\r\n})\r\n\r\n\r\nexport const activeArtists = (screen, title ) => ({\r\n    type: types.ArtistsScreenActive,\r\n    payload: {\r\n        screen,\r\n        title\r\n    }\r\n});\r\n\r\n\r\n//ARTISTA ACTIVO\r\nexport const startActiveArtist = ( artistId, token ) => {\r\n    return async ( dispatch ) => {\r\n        try {\r\n            \r\n            dispatch( startLoading() );\r\n            const activeArtist = await getArtistById( artistId, token)\r\n            dispatch( setActiveArtist(activeArtist[0]))\r\n            dispatch(activeArtists('ActiveArtist', 'ActiveArtist'))\r\n    \r\n            dispatch( finishLoading() );\r\n    \r\n            //console.log(activeArtist[0]);\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n    }\r\n}\r\n\r\nconst setActiveArtist = ( activeArtist ) => ({\r\n    type: types.activeArtist,\r\n    payload: activeArtist\r\n})\r\n\r\n\r\n\r\n//ARTISTAS RELACIONADOS\r\nexport const startRelatedArtists = ( artistId, token ) => {\r\n    return async ( dispatch ) => {\r\n        const relatedArtists = await relatedOptions( artistId, token)\r\n        dispatch( setRelatedArtists(relatedArtists))\r\n    }\r\n}\r\n\r\nconst setRelatedArtists = ( relatedArtists ) => ({\r\n    type: types.relatedArtists,\r\n    payload: relatedArtists\r\n})\r\n\r\n///ALBUMS ARTISTA\r\nexport const startAlbumsArtist = ( artistId, token ) => {\r\n    return async ( dispatch ) => {\r\n        const albums = await albumsOptions( artistId, token)\r\n        dispatch( setAlbums(albums))\r\n    }\r\n}\r\n\r\nconst setAlbums = ( albums ) => ({\r\n    type: types.albums,\r\n    payload: albums\r\n})\r\n\r\n//TOP TRACKS ARTISTA\r\nexport const startTopTracks = ( artistId, token ) => {\r\n    return async ( dispatch ) => {\r\n        const topTracks = await topTracksOptions( artistId, token);\r\n        dispatch( setTracks(topTracks));\r\n    }\r\n}\r\n\r\nconst setTracks = ( tracks ) => ({\r\n    type: types.topTracks,\r\n    payload: tracks\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ArtistCard = ({\r\n    idArtist,\r\n    name,\r\n    imgArtist,\r\n    //hrefArtist,\r\n    //followers\r\n}) => {\r\n\r\n    return (\r\n\r\n        //////////////////\r\n        <div className=\"card ms-3 bg-transparent\" style={{border: 'none'}} >\r\n            <Link to={`./artist/${idArtist}`}>\r\n            <div    \r\n                //src={ imgArtist } \r\n                className=\"card-img\" \r\n                alt={ name } \r\n                cursor= 'pointer'\r\n                style={imgArtist ? { backgroundImage: 'url('+ imgArtist +')' } : {backgroundColor: '#ffffff'}} \r\n                    \r\n            ></div>\r\n            </Link>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-titlec text-truncate\" style={{color: 'white'}}>{ name }</h5>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n","import React  from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ArtistCard } from './ArtistCard';\r\n\r\n\r\nexport const ArtistList = () => {\r\n\r\n    const {artists} = useSelector(state => state.artists);\r\n\r\n    \r\n\r\n    return (\r\n      <div className=\"card-columns animate__animated animate__fadeIn\" >\r\n          {\r\n              artists.map( artist => (\r\n                  <ArtistCard \r\n                    key={ artist.idArtist }\r\n                      { ...artist }\r\n                  />\r\n              ))\r\n          }\r\n      </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingArtists } from '../../../actions/artists';\r\nimport { ArtistList } from './ArtistList';\r\n\r\n\r\n\r\n\r\nexport const ArtistsScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {token} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n        if( token !=null ){\r\n            //console.log('ESTA ES LA RESPUESTA CORRECTA');\r\n            dispatch(startLoadingArtists(token) );\r\n        }else{\r\n            console.log('error !');\r\n        }\r\n\r\n    }, [token, dispatch])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-2\">\r\n            <center><h3>Artists</h3></center>\r\n\r\n                <div className=\"container mt-4\">\r\n                    <ArtistList />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nexport default function TopCart({\r\n    idTrack,\r\n    name,\r\n    album,\r\n    duration_ms,\r\n    images,\r\n    position\r\n}) {\r\n\r\n    const [duration, setDuration] = useState('');\r\n    // Convering miliseconds into representative time\r\n    const getDuration = (time) => {\r\n        const totalSeconds = Math.floor((time / 1000) % 60);\r\n        const totalMinutes = Math.floor((time / 1000 / 60) % 60);\r\n        const totalDuration = [\r\n            totalMinutes\r\n                .toString()\r\n                .slice(0, 2),\r\n            totalSeconds\r\n                .toString()\r\n                .slice(0, 2)\r\n        ].join(':');\r\n        if (parseInt(totalMinutes) < 10) {\r\n            setDuration('0' + (totalDuration.charAt(3) === '' ? totalDuration+'0' : totalDuration))\r\n        } else {\r\n            setDuration((totalDuration.charAt(3) === '' ? totalDuration+'0' : totalDuration))\r\n        }\r\n\r\n    }\r\n    // Lyfe Cicle used to run getDuration function, getting the track duration into\r\n    // mm:ss format\r\n    useEffect(() => {\r\n        getDuration(parseInt(duration_ms))\r\n    }, [duration_ms])\r\n\r\n    return (\r\n        <div className=\"top-cart row\">\r\n            <p className=\"top-position\">{position}</p>\r\n            <div\r\n                className=\"top-image\"\r\n                style={{\r\n                backgroundImage: 'url(' + images[0].url + ')'\r\n            }}></div>\r\n            <div className=\"top-song-info column\">\r\n                <div className=\"top-title\">{name}</div>\r\n                <div className=\"top-album\">{album}</div>\r\n            </div>\r\n            <div className=\"top-duration\">\r\n                <p>{duration}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nexport default function TopCart(props) {\r\n    \r\n    const [duration, setDuration] = useState('');\r\n    // Convering miliseconds into representative time\r\n    const getDuration = (time) => {\r\n        const totalSeconds = Math.floor((time / 1000) % 60);\r\n        const totalMinutes = Math.floor((time / 1000 / 60) % 60);\r\n        const totalDuration = [\r\n            totalMinutes\r\n                .toString()\r\n                .slice(0, 2),\r\n            totalSeconds\r\n                .toString()\r\n                .slice(0, 2)\r\n        ].join(':');\r\n        if (parseInt(totalMinutes) < 10) {\r\n            setDuration('0' + (totalDuration.charAt(3) === '' ? totalDuration+'0' : totalDuration))\r\n        } else {\r\n            setDuration((totalDuration.charAt(3) === '' ? totalDuration+'0' : totalDuration))\r\n        }\r\n\r\n    }\r\n    // Lyfe Cicle used to run getDuration function, getting the track duration into\r\n    // mm:ss format\r\n    useEffect(() => {\r\n        getDuration(parseInt(props.duration))\r\n    }, [props.duration])\r\n\r\n    return (\r\n        <div className=\"top-cart row\">\r\n            <p className=\"top-position\">{props.position}</p>\r\n            <div\r\n                className=\"top-image\"\r\n                style={{\r\n                backgroundImage: 'url(' + props.thumb + ')'\r\n            }}></div>\r\n            <div className=\"top-song-info column\">\r\n                <div className=\"top-title\">{props.title}</div>\r\n                <div className=\"top-album\">{props.albumName}</div>\r\n            </div>\r\n            <div className=\"top-duration\">\r\n                <p>{duration}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n*/","import React from 'react'\r\n\r\nexport default function AlbumCart(props) {\r\n    return (\r\n        <div className=\"album-cart\">\r\n            <div className=\"album-image\" style={{backgroundImage: 'url('+props.thumb+')'}}></div>\r\n            <div className=\"album-title\">{props.title}</div>\r\n            <div className=\"album-year\">{props.year}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function RelatedPhoto({\r\n    idArtist,\r\n    imgArtist\r\n}) {\r\n    return (\r\n        <Link to={\"/artist/\" + idArtist} className=\"link-none-decoration\">\r\n            <div\r\n                //onClick={() => props.getArtistProfile(props.artistID)}\r\n                className=\"related-photo relative\"\r\n                style={{\r\n                backgroundImage: 'url(' + imgArtist[2]?.url + ')'\r\n            }}></div>\r\n        </Link>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n/**TEST */\r\nimport TopCart from './Artists/ArtistInfo/TopCart';\r\nimport AlbumCart from './Artists/ArtistInfo/AlbumCart';\r\nimport RelatedPhoto from './Artists/ArtistInfo/RelatedPhoto';\r\nimport { startActiveArtist, startAlbumsArtist, startRelatedArtists, startTopTracks } from '../../actions/artists';\r\n////////////////////////\r\n\r\nexport const ArtistScreen = () =>  {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { artistId } = useParams();\r\n    const { token } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        //const artist = await getArtistById( artistId, token );\r\n        dispatch(startActiveArtist( artistId, token ));\r\n        dispatch( startRelatedArtists( artistId, token ));\r\n        dispatch( startAlbumsArtist( artistId, token ));\r\n        dispatch( startTopTracks( artistId, token ));\r\n       \r\n        //setArtist( artist[0] );\r\n        //console.log(artist[0]);\r\n\r\n    }, [artistId, token, dispatch])\r\n\r\n    \r\n    const { artist, relatedArtists, albums, topTracks} = useSelector(state => state.artists);\r\n    const [offset, setOffset] = useState(0);\r\n\r\n\r\n    //console.log(relatedArtists);\r\n\r\n    const {\r\n        name,\r\n        imgArtist,\r\n        //hrefArtist,\r\n        //followers,\r\n        //popularity,\r\n        //type\r\n\r\n    } = artist;\r\n\r\n    const offsetList = (id) => {\r\n        switch (id) {\r\n            case 'offPrev':\r\n                if (offset > 0) {\r\n                    setOffset(offset - 6);\r\n                }\r\n                break;\r\n            case 'offNext':\r\n                setOffset(offset + 6);\r\n                break;\r\n\r\n            default: \r\n                return console.log('default');     \r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"new-releases animate__animated animate__fadeIn\">\r\n        <div className=\"artist-profile-content row\">\r\n            <div className=\"artist-about column\">\r\n                <div className=\"artist-about-photo column\">\r\n                    <div\r\n                        style={imgArtist\r\n                        ? {\r\n                            backgroundImage: 'url(' + imgArtist[1]?.url + ')'\r\n                        }\r\n                        : {\r\n                            backgroundColor: '#ffffff'\r\n                        }}\r\n                        className=\"artist-photo\"></div>\r\n                    <div className=\"artist-profile-name white\">{name}</div>\r\n                </div>\r\n                <div className=\"artist-about-info relative\">\r\n                    <div className=\"artist-info\">\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab ut adipisci\r\n                     \r\n                            accusantium perspiciatis quae iste, quibusdam esse quaerat a vero. A, sint!</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"artist-about-related-container\">\r\n                    <p>Similar to {name}</p>\r\n                    <div className=\"artist-about-related row\">\r\n                        {relatedArtists\r\n                            ? relatedArtists\r\n                                .slice(0, 5)\r\n                                .map(related => {\r\n                                    return (<RelatedPhoto\r\n                                        key = { related.idArtist}\r\n                                        {...related} \r\n                                    />)\r\n                                })\r\n                            : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"artist-profile-music column\">\r\n                <div className=\"artist-profile-music-albums column\">\r\n                    <div className=\"albums-control row\">\r\n                        <p>Albums</p>\r\n                        <div className=\"release-control\">\r\n                            <i\r\n                                id=\"offPrev\"\r\n                                onClick={() => offsetList(\"offPrev\")}\r\n                                className=\"fas fa-chevron-circle-left\"></i>\r\n                            <i\r\n                                id=\"offNext\"\r\n                                onClick={() => offsetList(\"offNext\")}\r\n                                className=\"fas fa-chevron-circle-right\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"album-cart-container relative row\">\r\n                        {albums\r\n                            ? albums.map(album => {\r\n                                return (<AlbumCart\r\n                                    key={album.idAlbum}\r\n                                    title={album.name}\r\n                                    year={album\r\n                                    .release_date\r\n                                    .slice(0, 4)}\r\n                                    thumb={album.images\r\n                                    ? album.images[0].url\r\n                                    : ''}/>)\r\n                            })\r\n                            : ''}\r\n                    </div>\r\n                </div>\r\n                <div className=\"artist-profile-music-tracks-container relative\">\r\n                    <div className=\"artist-profile-music-tracks column\">\r\n                        {topTracks\r\n                            ? topTracks.map((track, index) => {\r\n                                return (<TopCart\r\n                                    key={track.idTrack}\r\n                                    position={index + 1}\r\n                                    {...track}\r\n                                    />)\r\n                            })\r\n                            : ''}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n        ","import axios from 'axios';\r\n\r\n\r\nexport const loadReleases = async ( token ) => {\r\n    \r\n    \r\n    const {data} = await axios('https://api.spotify.com/v1/browse/new-releases?country=CO&offset=0&limit=12', {\r\n\r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTÁ ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n   \r\n    \r\n    const next = data.albums.next;\r\n    const previous = data.albums.previous;\r\n    \r\n\r\n    const {items} = data.albums;\r\n    //console.log(items);\r\n    \r\n    const releases = [];\r\n    \r\n\r\n    items.forEach( snapHijo => {\r\n\r\n        releases.push({\r\n            idAlbum: snapHijo.id,\r\n            name: snapHijo.name,\r\n            imgAlbum: snapHijo.images[1].url,\r\n            hrefAlbum: snapHijo.href,\r\n            hrefArtist: snapHijo.artists[0].href,\r\n            idArtist: snapHijo.artists[0].id,\r\n            nameArtist: snapHijo.artists[0].name,\r\n        })\r\n\r\n    });\r\n\r\n    //releases.push( pagination );\r\n    //console.log(releases);\r\n    return {\r\n        releases, next, previous\r\n    };\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nexport const loadReleasesNext = async ( token, api ) => {\r\n    \r\n    \r\n\r\n    const {data} = await axios(`${api}`, {\r\n\r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTÁ ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n   \r\n    \r\n    const next = data.albums.next;\r\n    const previous = data.albums.previous;\r\n    \r\n\r\n    const {items} = data.albums;\r\n    //console.log(items);\r\n    \r\n    const releases = [];\r\n    \r\n\r\n    items.forEach( snapHijo => {\r\n\r\n        releases.push({\r\n            idAlbum: snapHijo.id,\r\n            name: snapHijo.name,\r\n            imgAlbum: snapHijo.images[1].url,\r\n            hrefAlbum: snapHijo.href,\r\n            hrefArtist: snapHijo.artists[0].href,\r\n            idArtist: snapHijo.artists[0].id,\r\n            nameArtist: snapHijo.artists[0].name,\r\n        })\r\n\r\n    });\r\n\r\n    //releases.push( pagination );\r\n    //console.log(releases);\r\n    return {\r\n        releases, next, previous\r\n    };\r\n}","import { loadReleases } from \"../helpers/loadReleases\"\r\nimport { loadReleasesNext } from \"../helpers/loadReleasesNext\";\r\nimport { types } from \"../types/types\"\r\nimport { startLogout } from \"./auth\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\n\r\n\r\n\r\n//cargar releases, función asincrona\r\n\r\nexport const startLoadingReleases = ( token ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        try {\r\n            const releases = await loadReleases( token );\r\n            //console.log( releases );\r\n            dispatch( setReleases( releases ) );\r\n        } catch (error) {\r\n            console.log('error');\r\n            dispatch( startLogout());\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startNextPage = ( token, next ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            dispatch( startLoading() );\r\n            const releases = await loadReleasesNext( token, next );\r\n            \r\n            //console.log( releases );\r\n            dispatch( setReleases( releases ) );\r\n            dispatch( finishLoading() );\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startPreviousPage = ( token, previous ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        try {\r\n            dispatch( startLoading() );\r\n    \r\n            const releases = await loadReleasesNext( token, previous );\r\n            \r\n            //console.log( releases );\r\n            dispatch( setReleases( releases ) );\r\n            \r\n            dispatch( finishLoading() );\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n//Grabar lanzamientos obtenidos en nuestro store\r\nexport const setReleases = ( releases ) => ({\r\n    type: types.releasesLoad,\r\n    payload: releases \r\n});\r\n\r\nexport const activeReleases = (screen, title ) => ({\r\n    type: types.releasesScreenActive,\r\n    payload: {\r\n        screen,\r\n        title\r\n    }\r\n});","import React from 'react'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport const ReleasesCard = ({\r\n    idAlbum,\r\n    idArtist,\r\n    hrefAlbum,\r\n    hrefArtis,\r\n    imgAlbum,\r\n    name,\r\n    nameArtist\r\n}) => {\r\n\r\n    return (\r\n        \r\n        //////////////////\r\n        <div className=\"card ms-3 bg-transparent animate__animated animate__fadeIn\" style={{border: 'none'}}>\r\n            <img src={ imgAlbum} className=\"card-img mb-2\" alt={ name } />\r\n            <div className=\"card-body\" style={{padding: '0'}}>\r\n                <h6 className=\"overflow-string card-title text-truncate mb-1\"\r\n                    style={{color: 'white'}}\r\n                >{ name }</h6>\r\n                <p className=\"card-text text-truncate\"\r\n                    style={{color: 'gray'}}\r\n                >{ nameArtist }</p>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ReleasesCard } from './ReleasesCard';\r\n\r\n\r\nexport const ReleasesList = () => {\r\n\r\n    const {releases} = useSelector(state => state.releases);\r\n\r\n    return (\r\n      <div className=\"card-columns animate__animated animate__fadeIn\">\r\n          {\r\n              releases.map( release => (\r\n                  <ReleasesCard \r\n                    key={ release.idAlbum }\r\n                      { ...release }\r\n                  />\r\n              ))\r\n          }\r\n      </div>\r\n    )\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport { startLoadingReleases, startNextPage, startPreviousPage } from '../../../actions/releases';\r\nimport { ReleasesList } from './ReleasesList';\r\n\r\n\r\n\r\n\r\n\r\nexport const ReleasesScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {token} = useSelector(state => state.auth);\r\n    const { title } = useSelector(state => state.spotify);\r\n    const { loading } = useSelector(state => state.ui);\r\n    const { next, previous } = useSelector(state => state.releases);\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if( token !=null ){\r\n\r\n            //console.log('ESTA ES LA PUTA RESPUESTA CORRECTA');\r\n            dispatch(startLoadingReleases(token) );\r\n        }else{\r\n            console.log('ALVVVVVVVVVVVVGA');\r\n        }\r\n\r\n    }, [token, dispatch])\r\n\r\n    const nextPage = () => {\r\n        dispatch( startNextPage( token, next ) );\r\n    }\r\n\r\n    const previousPage = () => {\r\n        dispatch( startPreviousPage( token, previous ) );\r\n\r\n        //console.log('atrasss');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-2\">\r\n            <center><h3>{ title }</h3></center>\r\n\r\n            <div className=\"mb-2\" style={{textAlign: 'right'}}>\r\n                <button \r\n                    className = \"btn\" \r\n                    style={{background: 'none', border:'none', cursor: 'pointer'}} \r\n                    disabled = { loading || !previous } \r\n                    onClick={previousPage} \r\n                >\r\n                    <i  \r\n                        className=\"fas fa-chevron-circle-left\" \r\n                        style={{fontSize: '29px', color: 'gray'}}\r\n                    ></i>\r\n                </button>\r\n\r\n                <button \r\n                    className = \"btn\" \r\n                    style={{background: 'none', border:'none', cursor: 'pointer'}}  \r\n                    disabled= {loading || !next} \r\n                    onClick={nextPage}\r\n                >\r\n                    <i  \r\n                        className=\"fas fa-chevron-circle-right\"\r\n                        style={{fontSize: '29px', color: 'gray', cursor: 'pointer'}}\r\n                    ></i>\r\n                </button>\r\n            </div>\r\n            <ReleasesList  />\r\n              \r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n\r\nexport const loadSongs = async ( token ) => {\r\n    \r\n    \r\n\r\n    const {data} = await axios('https://api.spotify.com/v1/browse/categories?country=CO&locale=sv_SE&limit=12&offset=5', {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTÁ ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n\r\n    //console.log(data);\r\n\r\n\r\n     \r\n    const { items }  = data.categories;\r\n    //console.log(items);\r\n    \r\n    const categories = [];\r\n    \r\n\r\n    items.forEach( category => {\r\n\r\n        categories.push({\r\n            \r\n            idCategory: category.id,\r\n            name: category.name,\r\n            icon: category.icons[0].url,\r\n            hrefCategory: category.href,\r\n        })\r\n\r\n    });\r\n\r\n    //console.log(categories);\r\n    return categories;\r\n}","import axios from 'axios';\r\n\r\n\r\nexport const searchSongs = async ( token, search ) => {\r\n    \r\n    \r\n\r\n    const {data} = await axios(`https://api.spotify.com/v1/search?q=${search}&type=track&market=CO&limit=6&offset=5`, {\r\n       \r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token },\r\n\r\n        })/*.then ( ({data}) => {\r\n            console.log('ESTA ES LA RESPUESTA: ');\r\n            console.log( data );\r\n            \r\n        })\r\n        .catch( err => {\r\n            console.log('FALLO LA PETICIÓN MI BRO :( ');\r\n            console.log( err );\r\n        })*/\r\n\r\n    //console.log(data);\r\n\r\n\r\n     \r\n    const {items} = data.tracks;\r\n    //console.log(items);\r\n    \r\n    \r\n    const songs = [];\r\n    \r\n\r\n    items.forEach( song => {\r\n\r\n        songs.push({\r\n            \r\n            idSong: song.id,\r\n            idAlbum: song.album.id,\r\n            name: song.name,\r\n            imgAlbum: song.album.images[1]?.url,\r\n            hrefAlbum: song.album.href,\r\n            hrefArtist: song.artists[0].href,\r\n            idArtist: song.artists[0].id,\r\n            nameArtist: song.artists[0].name,\r\n            preview: song.preview_url\r\n        })\r\n\r\n    });\r\n\r\n    //console.log(songs);\r\n    return songs;\r\n}","\r\nimport { loadSongs } from \"../helpers/loadSongs\";\r\nimport { searchSongs } from \"../helpers/searchSongs\";\r\nimport { types } from \"../types/types\";\r\nimport { startLogout } from \"./auth\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\nexport const startLoadingSongs = ( token ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        try {\r\n            const songs = await loadSongs( token );\r\n            //console.log( songs );\r\n            dispatch( setSongs( songs ));\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch( startLogout());\r\n        }\r\n    }\r\n}\r\n\r\nexport const startSearchSong = ( token, search ) => {\r\n    return async ( dispatch ) => {\r\n        dispatch( startLoading() );\r\n\r\n        try {\r\n            \r\n            const songs = await searchSongs( token, search );\r\n            //console.log('RESULTADO DE LA BUSQUEDA:' , songs);\r\n            dispatch( activeSongs('searchSong', 'Songs found') );\r\n            dispatch( setSongs( songs ));\r\n            //console.log(songs);\r\n    \r\n            dispatch( finishLoading() );\r\n\r\n        } catch (error) {\r\n            alert('No se encontrarón resultados');\r\n            console.log(error);\r\n            dispatch( finishLoading() );\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSongs = ( songs ) => ({\r\n    type: types.songsLoad,\r\n    payload: songs \r\n})\r\n\r\n\r\nexport const startScreen = () => {\r\n    return (dispatch, getState) => {\r\n        \r\n        dispatch( startLoading() );\r\n            \r\n        dispatch( activeSongs('songs', 'Songs') );\r\n        console.log('carga correcta');\r\n\r\n        dispatch(finishLoading());\r\n\r\n    }\r\n}\r\n\r\nexport const activeSongs = (screen, title) => ({\r\n    type: types.songsScreenActive,\r\n    payload: {\r\n        screen,\r\n        title\r\n    }\r\n});","import React from 'react';\r\n\r\nexport const SongsCard = ({\r\n    idCategory,\r\n    name,\r\n    icon,\r\n    hrefCategory\r\n}) => {\r\n\r\n    return (\r\n        \r\n\r\n        //////////////////\r\n        <div className=\"card ms-3 bg-transparent\" style={{border: 'none'}}>\r\n            <img src={ icon } className=\"card-img mb-2\" alt={ name } />\r\n            <div className=\"card-body\" style={{ padding: '0'}}>\r\n                <h5 className=\"card-title text-truncate mb-0\" style={{color: 'white'}}>{ name }</h5>\r\n                <p className=\"card-text text-truncate \" style={{color: 'gray'}}> { idCategory }</p>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}","import React  from 'react'\r\nimport { useSelector } from 'react-redux';\r\n//import { Link } from 'react-router-dom';\r\nimport { SongsCard } from './SongsCard';\r\n\r\n\r\nexport const SongsList = () => {\r\n\r\n    const {songs} = useSelector(state => state.songs)\r\n    const {screen} = useSelector(state => state.spotify)\r\n\r\n\r\n    return (\r\n      <div className=\"card-columns animate__animated animate__fadeIn\">\r\n         \r\n          {\r\n\r\n              ( screen === 'searchSong' )\r\n                    &&\r\n                songs.map( (song, index )=> (  \r\n                \r\n                <div key={index}>\r\n                <div className=\"card ms-3 bg-transparent animate__animated animate__fadeIn\" >\r\n                    <img src={ song.imgAlbum } className=\"card-img mb-2\" alt={ song.name } />\r\n                    <div className=\"card-body\" style={{padding:'0'}}>\r\n                        <h5 className=\"card-title text-truncate mb-0\"style={{color: 'white'}} >{ song.name }</h5>\r\n                        <p className=\"card-text text-truncate\" style={{color: 'gray'}} > { song.nameArtist }</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n                ))\r\n          }\r\n         \r\n         \r\n          {\r\n              ( screen === 'songs')\r\n                   && \r\n              songs.map( category => (\r\n                  <SongsCard \r\n                    key={ category.idCategory }\r\n                      { ...category }\r\n                  />\r\n              ))\r\n          }\r\n      </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoadingSongs } from '../../../actions/songs';\r\nimport { SongsList } from './SongsList';\r\n\r\n\r\nexport const SongsScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {token} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n        if( token !== null ){\r\n            //console.log('ESTA ES LA RESPUESTA CORRECTA');\r\n            dispatch(startLoadingSongs(token) );\r\n        }else{\r\n            console.log('ALVVVVVVVVVVVVGA');\r\n        }\r\n\r\n    }, [token, dispatch])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-2\">\r\n\r\n                <center><h3>Songs</h3></center>      \r\n                <div className=\"container mt-5\">\r\n                    <SongsList />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Spotify.f48fb565.png\";","import React, { /*useState*/ } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport queryString from 'query-string';\r\n\r\nimport { startLoadingArtists, startSearchArtist } from '../../actions/artists';\r\n//import { startLogout } from '../../actions/auth';\r\nimport { /*activeSongs,*/ startLoadingSongs, startScreen, startSearchSong } from '../../actions/songs';\r\n//import { searchSongs } from '../../helpers/searchSongs';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport  logo  from '../../styles/images/Spotify.png';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    //console.log(location);\r\n    \r\n    const { q = '' } = queryString.parse( location.search );\r\n    const { q2 = '' } = queryString.parse( location.search );\r\n    //console.log(q);\r\n\r\n    const {name, token } = useSelector(state => state.auth);\r\n    const { loading } = useSelector( state => state.ui);\r\n    const { screen } = useSelector(state => state.spotify);\r\n\r\n     const [ formValues, handleInputChange ] = useForm( {\r\n        searchArtist: q,\r\n        searchSong: q2,\r\n    } );\r\n\r\n    const { searchArtist, searchSong } = formValues;\r\n    \r\n    const handleClickArtists = () => {\r\n        if ( screen !== 'artists' && screen !== 'ActiveArtist' ){\r\n            \r\n            console.log('PRIMERA CARGA ARTISTAS CORRECTAMENTE');\r\n            dispatch( startLoadingArtists( token ));\r\n            history.push('/artists');\r\n        }\r\n    }\r\n     \r\n    const handleSearchArtist = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        if( screen === 'ActiveArtist' ) {\r\n            await history.replace(`/artists`);\r\n        }\r\n        if( searchArtist.trim().length > 2 ){\r\n            await history.push(`?q=${ searchArtist }`);\r\n            dispatch( startSearchArtist( token, searchArtist) );\r\n            console.log('BUSQUEDA ARTISTA');\r\n        }\r\n    }\r\n\r\n    const handleClickSongs = () => {\r\n        if ( screen !== 'songs' && screen !== 'searchSong' ){\r\n            \r\n            console.log('PRIMERA CARGA CANCIONES');\r\n            dispatch( startScreen() );\r\n            dispatch( startLoadingSongs( token ));\r\n            history.push('/songs');\r\n\r\n        }\r\n    }\r\n\r\n    const handleSearchSong = async(e) => {\r\n        e.preventDefault();\r\n        await history.push(`?q2=${ searchSong }`)\r\n\r\n        if( searchSong.trim().length > 2 ){\r\n            dispatch( startSearchSong( token, searchSong) );\r\n            console.log('BUSQUEDA CANCIÓN');\r\n        }else {\r\n            dispatch( startScreen() );\r\n            console.log('AL INICIO DEL SCREEN SONG');\r\n        }\r\n    }\r\n\r\n    /*const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }*/\r\n\r\n    \r\n    \r\n    return (\r\n\r\n        <div className=\"navbar navbar-dark navbar-gray\">\r\n            <nav className=\"navbar-content row\">\r\n                <a  className=\"navbar-brand\"\r\n                    href= \"/\"\r\n                    style= {{ cursor: \"pointer\"}}\r\n                >\r\n                    <img src={logo} className=\"d-inline-block align-top card-img-logo\" alt=\"home\"/>\r\n                </a>\r\n            </nav>\r\n\r\n            <form onSubmit={ handleSearchArtist } className=\"form-inline my-2 my-lg-0\" >\r\n            {/*<i className=\"fas fa-search\"></i>*/}\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control fas\"\r\n                    placeholder= \"&#xf002; Find artist\"\r\n                    name=\"searchArtist\"\r\n                    autoComplete=\"off\"\r\n                    disabled={loading}\r\n                    value= { searchArtist }\r\n                    onClick= {handleClickArtists}\r\n                    onChange= { handleInputChange }\r\n                    style={{background: '#333333', border: 'none', color: 'gray',\r\n                            width: '20vw'\r\n                    }}\r\n                    \r\n                />\r\n            </form>\r\n           \r\n            <form onSubmit={ handleSearchSong } className=\"form-inline my-2 my-lg-0\" >\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"&#xf002; Find song\"\r\n                    className=\"form-control fas\"\r\n                    name= \"searchSong\"\r\n                    autoComplete= \"off\"\r\n                    disabled = { loading }\r\n                    value={ searchSong }\r\n                    onClick = { handleClickSongs }\r\n                    onChange = { handleInputChange }\r\n                    style={{background: '#333333', border: 'none', color: 'gray',\r\n                    width: '20vw',\r\n                    }}\r\n                />\r\n                \r\n            </form>\r\n            \r\n            <span style={{ color: \"white\"}}>{ name }</span>         \r\n            {/*<button \r\n                    className=\"btn btn-outline-success\"\r\n                    onClick = { handleLogout }\r\n                >\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n            </button>*/}\r\n            \r\n        </div>\r\n\r\n        \r\n        \r\n    )\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n   \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n        \r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nimport { ArtistsScreen } from '../components/spotify/Artists/ArtistsScreen'\r\nimport { ArtistScreen } from '../components/spotify/ArtistScreen'\r\nimport { ReleasesScreen } from '../components/spotify/Releases/ReleasesScreen'\r\nimport { SongsScreen } from '../components/spotify/Songs/SongsScreen'\r\n\r\n//import { SpotifyScreen } from '../components/spotify/SpotifyScreen'\r\n\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>  \r\n            <Navbar />\r\n                <Switch>\r\n                    \r\n                    <Route path=\"/artists\" component={ ArtistsScreen } />\r\n                    <Route exact path=\"/artist/:artistId\" component={ ArtistScreen } />\r\n                    <Route exact path=\"/songs\" component={ SongsScreen } />\r\n                    <Route exact path=\"/songs/:songId\" component={ SongsScreen } />\r\n                    <Route exact path=\"/\" component={ ReleasesScreen } />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" />)\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" />)\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { loginSpotify, startSpotifyLogin } from '../actions/auth';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    const [ cheking, setCheking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n       \r\n        if(  token != null ) {\r\n            console.log('SI HAY TOKEN ');\r\n    \r\n            dispatch( loginSpotify(token));\r\n            setIsLoggedIn( true )\r\n        }else {\r\n            console.log('NO HAY TOKEN ! ');\r\n            dispatch(startSpotifyLogin());\r\n            setIsLoggedIn( false );\r\n        }\r\n    \r\n        setCheking( false );\r\n        console.log('::TOKEN:: ', token);\r\n    }, [dispatch])\r\n    \r\n\r\n\r\n\r\n    if ( cheking ) {\r\n        return (\r\n            <h1 style={{color: \"white\"}}>Waiting...</h1>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <Router>    \r\n            <div>           \r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" isAuthenticated = { isLoggedIn } component= { AuthRouter } /> \r\n                    \r\n                    <PrivateRoute path=\"/\" isAuthenticated = { isLoggedIn } component= { DashboardRoutes } />\r\n\r\n                    <Redirect  to=\"/auth/login\" /> {/* puede ir ruta con component404 */}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    artists: [],\r\n    artist: [],\r\n    relatedArtists: [],\r\n    albums: [],\r\n    topTracks: [],\r\n\r\n}\r\n\r\n\r\nexport const artistsReducer = ( state = initState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.ArtistsLoad: {\r\n\r\n            return{\r\n                ...state,\r\n                artists: [...action.payload]\r\n            }\r\n\r\n        }\r\n        case types.activeArtist: {\r\n            return {\r\n                ...state,\r\n                artist: {...action.payload}\r\n            }\r\n        }\r\n\r\n        case types.relatedArtists: {\r\n            return {\r\n                ...state,\r\n                relatedArtists: [ ...action.payload ]\r\n            }\r\n        }\r\n\r\n        case types.albums: {\r\n            return {\r\n                ...state,\r\n                albums: [ ...action.payload ]\r\n            }\r\n        }\r\n\r\n        case types.topTracks: {\r\n            return {\r\n                ...state,\r\n                topTracks: [ ...action.payload ]\r\n            }\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","\r\n\r\n/*\r\n\r\n    releases: [],\r\n\r\n\r\n    {\r\n        albums: {\r\n            href: 'urlspotify de la petiton general end point ,\r\n            items: [\r\n                {\r\n                    album_type: 'single',\r\n                    artists: [ //artistas del almbun con la siguiente info c/u\r\n                        {\r\n                            external_urls: {\r\n                                spotify: 'login spotify que contiene el perfil del artista'\r\n                            },\r\n                            href: 'https://api.spotify.com/v1/artists/14vNE9iqS5eGAL6OogiN8g', //link de petición con usuario\r\n                            id: 'aqui va el id del artista del album',\r\n                            name: 'nombre del artista',\r\n                            type: 'artista', ,\r\n                            uri: 'link que abre la aplicacion',\r\n                        }\r\n                    ],\r\n                    avaliable_markets: [\r\n                        CO, //contiene cada uno de los paises donde esta disponible\r\n                    ],\r\n                    external_urls: {\r\n                        spotify: 'link del album de spotify' en la web;\r\n                    },\r\n                    href: 'https://api.spotify.com/v1/albums/5Ok2ayEuY1g4IChRr3ddsC' //link de endpoInt para obtener el album,\r\n                    id: '5Ok2ayEuY1g4IChRr3dds' //ID Del album,\r\n                    images: [  ///imagenes del album en diferentes dimensiones\r\n                        {\r\n                            \"height\": 640,\r\n                            \"url\": \"https://i.scdn.co/image/ab67616d0000b273fb4d0ba3975967384e247596\",\r\n                            \"width\": 640\r\n                        },\r\n                        {\r\n                        \"height\": 300,\r\n                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02fb4d0ba3975967384e247596\",\r\n                        \"width\": 300\r\n                        },\r\n                        {\r\n                            \"height\": 64,\r\n                            \"url\": \"https://i.scdn.co/image/ab67616d00004851fb4d0ba3975967384e247596\",\r\n                            \"width\": 64\r\n                        }\r\n                    ], ///INFORMACIÓN DEL ALBUM GENERAL\r\n                    \"name\": \"Tror du att han bryr sig\", //NOMBRE DEL ALBÚM\r\n                    \"release_date\": \"2020-10-31\",          //FECHA DEL LANZAMIENTO\r\n                    \"release_date_precision\": \"day\",          //DIA PRECISO  \r\n                    \"total_tracks\": 1,                          //PISTAS\r\n                    \"type\": \"album\",                            //TIPO\r\n                    \"uri\": \"spotify:album:5Ok2ayEuY1g4IChRr3ddsC\"   //ABRIR ALBUM DESDE LA APLICACIÓN\r\n\r\n                },\r\n                {\r\n                        asi continua con la cantidad de data\r\n                },\r\n            ],\r\n            //PARAMETROS DEL API END POINT\r\n            \"limit\": 36,\r\n            \"next\": \"https://api.spotify.com/v1/browse/new-releases?country=SE&offset=36&limit=36\",\r\n            \"offset\": 0,\r\n            \"previous\": null,\r\n            \"total\": 100\r\n        }\r\n    }\r\n\r\n    \r\n    initState = {\r\n        releases: [\r\n           \r\n            {\r\n                items:[\r\n                    {   \r\n                        id: 'id del album'\r\n                        name: 'nombre album',\r\n                        artistis:[\r\n                            {\r\n                                href: 'peticion al artista endPoint API',\r\n                                name: 'nombre del artista',\r\n                            }\r\n                        ]\r\n                        images[1]:{\r\n                            height: '300',\r\n                            url:   'url de la imagen',\r\n                            width: '300'\r\n                        } \r\n\r\n                    },\r\n                ]\r\n                \r\n                limit: 'cantidad en la peticion',\r\n                next: 'nueva petición a la API, paginación',\r\n                previos:'null',\r\n            \r\n            }\r\n        ],\r\n    }\r\n\r\n    active: null,\r\n    active: {\r\n        id: 'asdasd'\r\n    }\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    releases: [], \r\n    next: null,\r\n    previous: null\r\n}\r\n\r\n\r\nexport const releasesReducer = ( state = initState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.releasesLoad: {\r\n\r\n            return{\r\n                ...state,\r\n                releases: [...action.payload.releases],\r\n                next: action.payload.next,\r\n                previous: action.payload.previous\r\n            }\r\n\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    songs: [], \r\n    active: null\r\n\r\n}\r\n\r\n\r\nexport const songsReducer = ( state = initState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.songsLoad: {\r\n\r\n            return{\r\n                ...state,\r\n                songs: [...action.payload],\r\n            }\r\n\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    screen: 'releases',\r\n    title: 'New releases',\r\n}\r\n\r\n\r\nexport const spotifyReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.songsScreenActive:\r\n            return {\r\n                ...state,\r\n                screen: action.payload.screen,\r\n                title: action.payload.title\r\n            }\r\n\r\n        case types.ArtistsScreenActive:\r\n            return {\r\n                ...state,\r\n                screen: action.payload.screen,\r\n                title: action.payload.title\r\n            }\r\n\r\n        case types.releasesScreenActive:\r\n            return {\r\n                ...state,\r\n                screen: action.payload,\r\n                title: action.payload.title\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError: \r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError: \r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport { artistsReducer } from '../reducers/artistsReducer';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { releasesReducer } from '../reducers/releasesReducer';\r\nimport { songsReducer } from '../reducers/songsReducer';\r\nimport { spotifyReducer } from '../reducers/spotifyReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    spotify: spotifyReducer,\r\n    releases: releasesReducer,\r\n    artists: artistsReducer,\r\n    songs: songsReducer\r\n});\r\n\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}  , action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            \r\n            return {}\r\n\r\n            \r\n        case types.spotifyToken: \r\n        \r\n            return {\r\n                token: action.payload.token,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './routes/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const SpotifyApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css';\n\nimport { SpotifyApp } from './SpotifyApp';\n\nReactDOM.render(\n    <SpotifyApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}